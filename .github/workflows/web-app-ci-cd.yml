name: Web App CI/CD

on:
  push:
    branches:
      - main
      - master
  pull_request:
    branches:
      - main
      - master

jobs:
  build-test-push-deploy:
    runs-on: ubuntu-latest

    steps:
      # Checkout the code
      - name: Checkout Code
        uses: actions/checkout@v3

      # Set up Python
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'

      # Install dependencies
      - name: Install Dependencies
        run: |
          pip install -r web-app/requirements.txt

      # Start MongoDB container
      - name: Start MongoDB Container
        run: |
          docker run -d --name mongodb -e MONGO_INITDB_DATABASE=Outfits -p 27017:27017 mongo:latest

      # Wait for MongoDB to be ready
      - name: Wait for MongoDB
        run: |
          for i in {1..10}; do
            if nc -z localhost 27017; then
              echo "MongoDB is ready!"
              exit 0
            fi
            echo "Waiting for MongoDB..."
            sleep 2
          done
          echo "MongoDB failed to start."
          exit 1

     # Run tests
      - name: Run Tests
        env:
          MONGO_DBNAME: Outfits
          MONGO_URI: mongodb://localhost:27017
        run: |
          pytest web-app/tests/

      # Log in to Docker Hub
      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      # Build and push the Docker image
      - name: Build and Push Web App Docker Image
        run: |
          docker build -t nataliovcharov/web-app ./web-app
          docker push nataliovcharov/web-app

      # Deploy to Digital Ocean
      - name: Deploy to Digital Ocean
        uses: appleboy/ssh-action@v0.1.10
        with:
          host: ${{ secrets.DO_HOST }}
          username: ${{ secrets.DO_USERNAME }}
          key: ${{ secrets.DO_SSH_KEY }}
          script: |
            docker pull nataliovcharov/web-app:latest
            docker-compose -f /root/docker-compose.yml up -d

