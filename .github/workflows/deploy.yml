name: Build and Deploy

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.12"]

    steps:
      - uses: actions/checkout@v4
      - name: Enter Directory
        run: |
          cd web-app

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v3
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install Pipenv
        run: pip install pipenv

      - name: Install dependencies
        run: |
          pipenv install
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
  
      # Run tests
      # - name: Run Tests
      #   run: |
      #     set -o allexport
      #     source .env
      #     set +o allexport
      #     pytest tests/
      # Create .env file
      - name: Create env file
        run: |
          echo "MONGO_DBNAME=${{ secrets.MONGO_DB }}" > .env
          echo "MONGO_URI=${{ secrets.MONGO_URI }}" >> .env
          echo "FLASK_APP=app.py" >> .env
          echo "FLASK_ENV=development" >> .env
          echo "FLASK_PORT=5000" >> .env
          echo "OPENWEATHER_API_KEY=${{ secrets.OPENWEATHER_API_KEY }}" >> .env

      - name: Run tests with pytest
        run: |
          pipenv install pytest
          pipenv run pytest

  deploy:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Install Docker Compose
        run: |
          sudo apt-get update
          sudo apt-get install -y docker-compose

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build Flask App Docker Image
        run: |
          docker build -t ${{ secrets.DOCKER_USERNAME }}/web-app:latest ./web-app
          docker push ${{ secrets.DOCKER_USERNAME }}/web-app:latest